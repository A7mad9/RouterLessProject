// $Id: singleconfig 1535 2009-09-16 16:21:01Z dub $

// Copyright (c) 2007-2009, Trustees of The Leland Stanford Junior University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
// Neither the name of the Stanford University nor the names of its contributors
// may be used to endorse or promote products derived from this software without
// specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

//A single cross 10X10 cross bar under injection mode

topology = routerless;

use_space_while_stall = 1;

router = rlAlpha;
//extension_buffers = 1;

routing_function = min;
network_file = rlConfig8.txt;
traffic = uniform;

sample_period = 1000;
injection_rate = 0.255; 

ejectors = 2;
buffer_policy = private;
routing_delay = 0;

packet_size = 5;
wait_for_tail_credit = 0; //must be set to false
num_vcs     = 1;
vc_buf_size = 5;
small_buf_size = 1;
big_buf_size = 5; //big must equal to vc_buf_size
output_to_file = 1;
output_file_name = runs/rlAlphaSynfull8Output;


sim_type = fes2; 
flit_width = 16;
synfull_instances = 4;

fes2_mapping_0 = {4,4,6,6,11,11,13,13,20,20,22,22,25,25,30,30,38,38,39,39,42,42,43,43,53,53,55,55,58,58,59,59,};
fes2_mapping_1 = {0,0,3,3,9,9,10,10,17,17,18,18,26,26,27,27,32,32,37,37,44,44,47,47,49,49,52,52,60,60,61,61,};
fes2_mapping_2 = {1,1,7,7,8,8,14,14,19,19,21,21,24,24,28,28,34,34,35,35,40,40,41,41,48,48,54,54,62,62,63,63,};
fes2_mapping_3 = {2,2,5,5,12,12,15,15,16,16,23,23,29,29,31,31,33,33,36,36,45,45,46,46,50,50,51,51,56,56,57,57,};



ideal_interconnect = 0;

fes2_concentrate = 1;



