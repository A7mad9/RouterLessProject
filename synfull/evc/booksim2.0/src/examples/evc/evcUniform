// $Id$

// Copyright (c) 2007-2015, Trustees of The Leland Stanford Junior University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

//8X8 mesh with 20 flits per packet under injection mode
//injection rate here is packet per cycle, NOT flit per cycle

// Topology

topology = mesh;
k = 8;
n = 2;

// Routing
routing_function = dor;
router = iqevc;
// Flow control
num_vcs     = 2;
vc_buf_size = 3;
wait_for_tail_credit = 0;
speculative = 1; 
injection_rate = 0.555; 
// Router architecture
vc_allocator = islip;
sw_allocator = islip;
alloc_iters  = 1;

credit_delay   = 1;
routing_delay  = 0;
vc_alloc_delay = 1;
sw_alloc_delay = 1;

input_speedup     = 1;
output_speedup    = 1;
internal_speedup  = 3.0;


// Traffic
traffic = uniform;
packet_size = 3;


//
// express virtual channel settings
//

evc = 1;
num_evcs = 1;
//evc_prioritized_class = 1;
selective_vc_request = 1;
hold_switch_for_evc_packet = 1;
evc_next_route = 0;
output_file_name = runs/evcUniformOutput;


//Synfull settings
sim_type = fes2;
flit_width = 32;
synfull_instances = 4;

fes2_mapping_0 = {0,0,1,1,2,2,3,3,8,8,9,9,10,10,11,11,16,16,17,17,18,18,19,19,24,24,25,25,26,26,27,27,} ;
fes2_mapping_1 = {4,4,5,5,6,6,7,7,12,12,13,13,14,14,15,15,20,20,21,21,22,22,23,23,28,28,29,29,30,30,31,31,} ;
fes2_mapping_2 = {32,32,33,33,34,34,35,35,40,40,41,41,42,42,43,43,48,48,49,49,50,50,51,51,56,56,57,57,58,58,59,59,} ;
fes2_mapping_3 = {36,36,37,37,38,38,39,39,44,44,45,45,46,46,47,47,52,52,53,53,54,54,55,55,60,60,61,61,62,62,63,63,} ;


ideal_interconnect = 0;

//fes2_concentrate = 1; 
